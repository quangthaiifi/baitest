/*
 * Created on 2018-09-27 ( Date ISO 2018-09-27 - Time 10:13:02 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package com.example.demo.entity;

import java.io.Serializable;
import javax.persistence.*;

/**
 * Persistent class for Members entity stored in table members.
 * This class is a "record entity" without JPA links.
 * @author Telosys (http://www.telosys.org/) version 3.0.0
 */
@Entity
@Table(name="members", catalog="liberaries" )
public class Members implements Serializable {

	private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="member_id", nullable=false)
    private Long memberId ; 
    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="gender", length=45)
    private String gender ;     @Column(name="member_first_name", length=45)
    private String memberFirstName ;     @Column(name="member_last_name", length=45)
    private String memberLastName ;     @Column(name="phone_number", length=45)
    private String phoneNumber ;     @Column(name="email_address", length=45)
    private String emailAddress ;     @Column(name="other_member_details", length=45)
    private String otherMemberDetails ;     @Column(name="membe_address_id", nullable=false)
    private Long membeAddressId ; // Foreign Key 

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Members() {
		super();
    }

    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
	public void setMemberId(Long memberId) {
        this.memberId = memberId ;
    }
	public Long getMemberId() {
        return this.memberId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
	//--- DATABASE MAPPING : gender (VARCHAR) 
	public void setGender(String gender) {this.gender = gender;}
	public String getGender() {return this.gender;}

	//--- DATABASE MAPPING : member_first_name (VARCHAR) 
	public void setMemberFirstName(String memberFirstName) {this.memberFirstName = memberFirstName;}
	public String getMemberFirstName() {return this.memberFirstName;}

	//--- DATABASE MAPPING : member_last_name (VARCHAR) 
	public void setMemberLastName(String memberLastName) {this.memberLastName = memberLastName;}
	public String getMemberLastName() {return this.memberLastName;}

	//--- DATABASE MAPPING : phone_number (VARCHAR) 
	public void setPhoneNumber(String phoneNumber) {this.phoneNumber = phoneNumber;}
	public String getPhoneNumber() {return this.phoneNumber;}

	//--- DATABASE MAPPING : email_address (VARCHAR) 
	public void setEmailAddress(String emailAddress) {this.emailAddress = emailAddress;}
	public String getEmailAddress() {return this.emailAddress;}

	//--- DATABASE MAPPING : other_member_details (VARCHAR) 
	public void setOtherMemberDetails(String otherMemberDetails) {this.otherMemberDetails = otherMemberDetails;}
	public String getOtherMemberDetails() {return this.otherMemberDetails;}

	//--- DATABASE MAPPING : membe_address_id (INT) 
	public void setMembeAddressId(Long membeAddressId) {this.membeAddressId = membeAddressId;}
	public Long getMembeAddressId() {return this.membeAddressId;}


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
 	public String toString() {
		StringBuilder sb = new StringBuilder(); 
		sb.append(memberId); 
		sb.append(gender); 
		sb.append("|"); 
		sb.append(memberFirstName); 
		sb.append("|"); 
		sb.append(memberLastName); 
		sb.append("|"); 
		sb.append(phoneNumber); 
		sb.append("|"); 
		sb.append(emailAddress); 
		sb.append("|"); 
		sb.append(otherMemberDetails); 
		sb.append("|"); 
		sb.append(membeAddressId); 
        return sb.toString();
    }
}
/*
 * Created on 2018-09-27 ( Date ISO 2018-09-27 - Time 10:13:02 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package com.example.demo.service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.example.demo.entity.BooksByCategories;
import com.example.demo.entity.BooksByCategoriesKey;
import com.example.demo.repository.BooksByCategoriesRepository;

/**
 * Service implementation for BooksByCategories.
 * @author Telosys (http://www.telosys.org/) version 3.0.0
 */
@Service
public class BooksByCategoriesServiceImpl implements BooksByCategoriesService {

	@Autowired
	private BooksByCategoriesRepository booksByCategoriesRepository;

	@Override
	public Page<BooksByCategories> search(Pageable pageable) {
		return booksByCategoriesRepository.findAll(pageable);
	}

	@Override
	public BooksByCategories get(Long isbn, Long caregoryId) {
		// Build the composite key
		BooksByCategoriesKey key = new BooksByCategoriesKey(isbn, caregoryId);
		return booksByCategoriesRepository.findByCompositePrimaryKey(key);
	}

	@Override
	public Boolean delete(Long isbn, Long caregoryId) {
		// Build the composite key
		BooksByCategoriesKey key = new BooksByCategoriesKey(isbn, caregoryId);
		if (booksByCategoriesRepository.findByCompositePrimaryKey(key) != null) {
			booksByCategoriesRepository.deleteById(key);
			return true;
		}
		return false;
	}

	@Override
	public BooksByCategories create(BooksByCategories booksByCategories) {
		return booksByCategoriesRepository.save(booksByCategories);
	}

	@Override
	public Boolean save(BooksByCategories booksByCategories) {
		// Build the composite key
		BooksByCategoriesKey pk = new BooksByCategoriesKey(booksByCategories.getIsbn(), booksByCategories.getCaregoryId());
		if (booksByCategoriesRepository.findByCompositePrimaryKey(pk) != null) {
			booksByCategoriesRepository.save(booksByCategories);
			return true;
		}
		return false;
	}

	@Override
	public Boolean exist(BooksByCategories booksByCategories) {
		// Build the composite key
		BooksByCategoriesKey pk = new BooksByCategoriesKey(booksByCategories.getIsbn(), booksByCategories.getCaregoryId());
		return booksByCategoriesRepository.existsById(pk);
	}


}

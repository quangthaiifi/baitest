/*
 * Created on 2018-09-28 ( Date ISO 2018-09-28 - Time 09:53:16 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package com.example.demo.service;

import com.example.demo.entity.Members;
import com.example.demo.service.criteria.MembersCriteria;

import java.util.List;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

/**
 * Service interface for Members.
 * @author Telosys (http://www.telosys.org/) version 3.0.0
 */
public interface MembersService {

	/**
	 * Perform a pageable and filtered search.
	 * @param pageable pagination configuration
	 * @param criteria filters
	 * @return a page of members
	 */
	public Page<Members> search(Pageable pageable, MembersCriteria criteria);
	/**
	 * Recover an members following an id.
	 * @param id the given id
	 * @return the members
	 */
	public Members get(Long memberId);

	/**
	 * Perform an members deletion.
	 * @param id the given id
	 * @return state of deletion (true if ok otherwise false)
	 */
	public Boolean delete(Long memberId);

	/**
	 * Perform an members creation.
	 * @param members to create
	 * @return created members
	 */
	public Members create(Members members);

	/**
	 * Perform an members update.
	 * @param members to update
	 * @return state of update (true if ok otherwise false)
	 */
	public Boolean save(Members members);

	/**
	 * Test members existence.
	 * @param members to check
	 * @return true if author exist otherwise false
	 */
	public Boolean exist(Members members);
	
	public List<Members> getAll();
}

/*
 * Created on 2018-09-28 ( Date ISO 2018-09-28 - Time 09:53:16 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package com.example.demo.service;
import com.example.demo.entity.BooksAtLibraries;
import com.example.demo.repository.BooksAtLibrariesRepository;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

/**
 * Service implementation for BooksAtLibraries.
 * @author Telosys (http://www.telosys.org/) version 3.0.0
 */
@Service
public class BooksAtLibrariesServiceImpl implements BooksAtLibrariesService {

	@Autowired
	private BooksAtLibrariesRepository booksAtLibrariesRepository;

	@Override
	public Page<BooksAtLibraries> search(Pageable pageable) {
		return booksAtLibrariesRepository.findAll(pageable);
	}

	@Override
	public BooksAtLibraries get(Long booksHasLibrariesid) {
		return booksAtLibrariesRepository.findByBooksHasLibrariesid(booksHasLibrariesid);
	}

	@Override
	public Boolean delete(Long booksHasLibrariesid) {
		if (booksAtLibrariesRepository.findByBooksHasLibrariesid(booksHasLibrariesid) != null) {
			booksAtLibrariesRepository.deleteById(booksHasLibrariesid);
			return true;
		}
		return false;
	}

	@Override
	public BooksAtLibraries create(BooksAtLibraries booksAtLibraries) {
		return booksAtLibrariesRepository.save(booksAtLibraries);
	}

	@Override
	public Boolean save(BooksAtLibraries booksAtLibraries) {
		final Long pk = booksAtLibraries.getBooksHasLibrariesid();
		if (booksAtLibrariesRepository.findByBooksHasLibrariesid(pk) != null) {
			booksAtLibrariesRepository.save(booksAtLibraries);
			return true;
		}
		return false;
	}

	@Override
	public Boolean exist(BooksAtLibraries booksAtLibraries) {
		return booksAtLibrariesRepository.existsById(booksAtLibraries.getBooksHasLibrariesid());
	}

	@Override
	public List<BooksAtLibraries> getAll() {
		// TODO Auto-generated method stub
		return booksAtLibrariesRepository.findAll();
	}


}

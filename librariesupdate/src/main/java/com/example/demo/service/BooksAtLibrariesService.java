/*
 * Created on 2018-09-28 ( Date ISO 2018-09-28 - Time 09:53:16 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package com.example.demo.service;

import com.example.demo.entity.BooksAtLibraries;

import java.util.List;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

/**
 * Service interface for BooksAtLibraries.
 * @author Telosys (http://www.telosys.org/) version 3.0.0
 */
public interface BooksAtLibrariesService {

	/**
	 * Perform a pageable and filtered search.
	 * @param pageable pagination configuration
	 * @return a page of booksAtLibraries
	 */
	public Page<BooksAtLibraries> search(Pageable pageable);
	/**
	 * Recover an booksAtLibraries following an id.
	 * @param id the given id
	 * @return the booksAtLibraries
	 */
	public BooksAtLibraries get(Long booksHasLibrariesid);

	/**
	 * Perform an booksAtLibraries deletion.
	 * @param id the given id
	 * @return state of deletion (true if ok otherwise false)
	 */
	public Boolean delete(Long booksHasLibrariesid);

	/**
	 * Perform an booksAtLibraries creation.
	 * @param booksAtLibraries to create
	 * @return created booksAtLibraries
	 */
	public BooksAtLibraries create(BooksAtLibraries booksAtLibraries);

	/**
	 * Perform an booksAtLibraries update.
	 * @param booksAtLibraries to update
	 * @return state of update (true if ok otherwise false)
	 */
	public Boolean save(BooksAtLibraries booksAtLibraries);

	/**
	 * Test booksAtLibraries existence.
	 * @param booksAtLibraries to check
	 * @return true if author exist otherwise false
	 */
	public Boolean exist(BooksAtLibraries booksAtLibraries);
	
	public List<BooksAtLibraries> findAll();
}

/*
 * Created on 2018-09-28 ( Date ISO 2018-09-28 - Time 09:53:16 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package com.example.demo.service;

import com.example.demo.entity.Categories;
import com.example.demo.service.criteria.CategoriesCriteria;

import java.util.List;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

/**
 * Service interface for Categories.
 * @author Telosys (http://www.telosys.org/) version 3.0.0
 */
public interface CategoriesService {

	/**
	 * Perform a pageable and filtered search.
	 * @param pageable pagination configuration
	 * @param criteria filters
	 * @return a page of categories
	 */
	public Page<Categories> search(Pageable pageable, CategoriesCriteria criteria);
	/**
	 * Recover an categories following an id.
	 * @param id the given id
	 * @return the categories
	 */
	public Categories get(Long categoryId);

	/**
	 * Perform an categories deletion.
	 * @param id the given id
	 * @return state of deletion (true if ok otherwise false)
	 */
	public Boolean delete(Long categoryId);

	/**
	 * Perform an categories creation.
	 * @param categories to create
	 * @return created categories
	 */
	public Categories create(Categories categories);

	/**
	 * Perform an categories update.
	 * @param categories to update
	 * @return state of update (true if ok otherwise false)
	 */
	public Boolean save(Categories categories);

	/**
	 * Test categories existence.
	 * @param categories to check
	 * @return true if author exist otherwise false
	 */
	public Boolean exist(Categories categories);
	
	public List<Categories> getAll();
}

package com.example.demo.entity;
// Generated Oct 2, 2018 5:55:30 AM by Hibernate Tools 5.2.10.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import net.bytebuddy.implementation.bind.annotation.IgnoreForBinding;
import net.minidev.json.annotate.JsonIgnore;

/**
 * Books generated by hbm2java
 */
@Entity
@Table(name = "books", catalog = "libraries")
public class Books implements java.io.Serializable {

	private Integer isbn;
	private String bookTitle;
	private Date dataOfPublication;
	private Set<Author> authors = new HashSet<Author>(0);
	private Set<MembersRequest> membersRequests = new HashSet<MembersRequest>(0);
	private Set<BooksHasLibraries> booksHasLibrarieses = new HashSet<BooksHasLibraries>(0);
	private Set<Categories> categorieses = new HashSet<Categories>(0);

	public Books() {
	}

	public Books(String bookTitle, Date dataOfPublication, Set<Author> authors, Set<MembersRequest> membersRequests,
			Set<BooksHasLibraries> booksHasLibrarieses, Set<Categories> categorieses) {
		this.bookTitle = bookTitle;
		this.dataOfPublication = dataOfPublication;
		this.authors = authors;
		this.membersRequests = membersRequests;
		this.booksHasLibrarieses = booksHasLibrarieses;
		this.categorieses = categorieses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "isbn", unique = true, nullable = false)
	public Integer getIsbn() {
		return this.isbn;
	}

	public void setIsbn(Integer isbn) {
		this.isbn = isbn;
	}

	@Column(name = "book_title", length = 45)
	public String getBookTitle() {
		return this.bookTitle;
	}

	public void setBookTitle(String bookTitle) {
		this.bookTitle = bookTitle;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "data_of_publication", length = 10)
	public Date getDataOfPublication() {
		return this.dataOfPublication;
	}

	public void setDataOfPublication(Date dataOfPublication) {
		this.dataOfPublication = dataOfPublication;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "book_by_author", catalog = "libraries", joinColumns = {
			@JoinColumn(name = "books_isbn", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "author_author_id", nullable = false, updatable = false) })
	public Set<Author> getAuthors() {
		return this.authors;
	}

	public void setAuthors(Set<Author> authors) {
		this.authors = authors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "books")
	 @JsonIgnore
	public Set<MembersRequest> getMembersRequests() {
		return this.membersRequests;
	}

	public void setMembersRequests(Set<MembersRequest> membersRequests) {
		this.membersRequests = membersRequests;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "books")
	 @JsonIgnore
	public Set<BooksHasLibraries> getBooksHasLibrarieses() {
		return this.booksHasLibrarieses;
	}

	public void setBooksHasLibrarieses(Set<BooksHasLibraries> booksHasLibrarieses) {
		this.booksHasLibrarieses = booksHasLibrarieses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "book_by_category", catalog = "libraries", joinColumns = {
			@JoinColumn(name = "books_isbn", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "categories_category_id", nullable = false, updatable = false) })
	public Set<Categories> getCategorieses() {
		return this.categorieses;
	}

	public void setCategorieses(Set<Categories> categorieses) {
		this.categorieses = categorieses;
	}

}
